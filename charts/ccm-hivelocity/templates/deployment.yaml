apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ccm-hivelocity.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ccm-hivelocity.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      {{- include "ccm-hivelocity.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ccm-hivelocity.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: Default
      serviceAccountName: {{ include "ccm-hivelocity.serviceAccountName" . }}
      tolerations:
        # this taint is set by all kubelets running `--cloud-provider=external`
        # so we should tolerate it to schedule the cloud controller manager
        - key: "node.cloudprovider.kubernetes.io/uninitialized"
          value: "true"
          effect: "NoSchedule"
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        # cloud controller manages should be able to run on masters
        - key: "node-role.kubernetes.io/master"
          effect: NoSchedule
          operator: Exists
        - key: "node-role.kubernetes.io/control-plane"
          effect: NoSchedule
          operator: Exists
        - key: "node.kubernetes.io/not-ready"
          effect: "NoSchedule"
      {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/manager"
            - "--cloud-provider=hivelocity"
            - "--leader-elect={{ .Values.env.leaderElect }}"
            - "--allow-untagged-cloud"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HIVELOCITY_API_KEY
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.create }}
                  name: {{ include "ccm-hivelocity.fullname" . }}
                  {{- else }}
                  name: {{ .Values.secret.name }}
                  {{- end }}
                  key: {{ .Values.secret.key }}
            - name: HIVELOCITY_DEBUG
              value: "{{ .Values.env.debug }}"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
