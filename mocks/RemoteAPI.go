// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	swagger "github.com/hivelocity/hivelocity-client-go/client"
	mock "github.com/stretchr/testify/mock"
)

// RemoteAPI is an autogenerated mock type for the RemoteAPI type
type RemoteAPI struct {
	mock.Mock
}

// GetBareMetalDeviceIdResource provides a mock function with given fields: deviceId
func (_m *RemoteAPI) GetBareMetalDeviceIdResource(deviceId int32) (*swagger.BareMetalDevice, error) {
	ret := _m.Called(deviceId)

	var r0 *swagger.BareMetalDevice
	if rf, ok := ret.Get(0).(func(int32) *swagger.BareMetalDevice); ok {
		r0 = rf(deviceId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*swagger.BareMetalDevice)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int32) error); ok {
		r1 = rf(deviceId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRemoteAPI interface {
	mock.TestingT
	Cleanup(func())
}

// NewRemoteAPI creates a new instance of RemoteAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRemoteAPI(t mockConstructorTestingTNewRemoteAPI) *RemoteAPI {
	mock := &RemoteAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
